name: Deploy to Docker Hub

on:
  push:
    branches: [ main, feat/add_ci_k8s ]


jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ secrets.DOCKER_USERNAME }}/td-mediatheque
          tags: |
            type=ref,event=branch
            type=sha,format=short
            type=semver,pattern={{version}}
            type=raw,value=latest

      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  notify-discord:
    runs-on: ubuntu-latest
    needs: build-and-push
    if: always()
    steps:
      - name: Notify on success
        if: needs.build-and-push.result == 'success'
        run: |
          curl -H "Content-Type: application/json" \
            -d '{"content": "✅ Déploiement réussi sur Docker Hub pour le commit `${{ github.sha }}` sur `${{ github.ref }}`.\nVoir l'\''image: https://hub.docker.com/r/${{ secrets.DOCKER_USERNAME }}/td-mediatheque"}' \
            ${{ secrets.DISCORD_WEBHOOK }}

      - name: Notify on failure
        if: needs.build-and-push.result == 'failure'
        run: |
          curl -H "Content-Type: application/json" \
            -d '{"content": "❌ Déploiement échoué sur Docker Hub pour le commit `${{ github.sha }}` sur `${{ github.ref }}`.\nVeuillez vérifier les logs."}' \
            ${{ secrets.DISCORD_WEBHOOK }}